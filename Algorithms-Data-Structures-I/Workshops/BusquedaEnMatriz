// Ejercicio 1 - Practica 9

/*
Escribir un programa que dada una matriz cuadrada de enteros y un entero x, retorne la fila y columna que contiene al
elemento x (o −1, −1 si no existe ese elemento). Calcular el tiempo de ejecucion de peor caso. El elemento x es unico.
*/


#include <iostream>
#include <vector>

using namespace std;

vector <int> encontrarElemento(vector<vector <int> > &v, int elem ) {
    vector <int> res = {-1,-1};
    for (int i = 0; i <v.size(); i++) {
        for (int j = 0; j <v[0].size(); j++) {
            if (v[i][j] == elem ){
                res = {i,j};
            }
        }
    }
    return res;
}

int main() {
    vector<vector<int> > m = {{2, 0, 5},
                              {9, 4, 7},
                              {1, 3, 6}};
    int x = 0;
    cout << "Ingrese el elemento a buscar" << endl;
    cin >> x;
    vector <int> result = encontrarElemento(m,x);
    cout << "El elemento " << x << " esta en la posicion: " << "{" << result[0] << "," << result[1] << "}" << endl;
    return 0;
}

//Complejidad O (n*m) para n filas y m columnas
